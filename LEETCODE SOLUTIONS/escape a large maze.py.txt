escape  a large maze.py

class Solution:
    def isEscapePossible(self, blocked: List[List[int]], source: List[int], target: List[int]) -> bool:
        blocked = {tuple(p) for p in blocked}
        
        def bfs(start, end):
            queue, visited = [start], set([tuple(start)])
            for r, c in queue:
                for i, j in [[0, -1], [0, 1], [-1, 0], [1, 0]]:
                    nextR, nextC = r + i, c + j
                    if 0 <= nextR < 10**6 and 0 <= nextC < 10**6 and (nextR, nextC) not in visited and (nextR, nextC) not in blocked:
                        if [nextR, nextC] == end: 
                            return True
                        queue.append([nextR, nextC])
                        visited.add((nextR, nextC))
                if len(queue) > 19900:
                    return True
            return False
        
        return bfs(source, target) and bfs(target, source)